getwd()
gl(2,4)
gl(3,c(1,2,3))
str(split)
library(datasets)
data("airquality")
head(airquality)
s<-split(airquality,airquality$Month)
s
lapply(s,function(x) colMeans(x[,c('Ozone','Solar.R','Temp')]))
is.na(s$`9`)
all(s$`9`!=FALSE)
all(is.na(s$`9`)!=FALSE)
lapply(s,function(x) colMeans(x[,c('Ozone','Solar.R','Temp')]),na.rm=TRUE)
lapply(s,function(x) colMeans(x[,c('Ozone','Solar.R','Temp')],na.rm=TRUE)
)
Sapply(s,function(x) colMeans(x[,c('Ozone','Solar.R','Temp')],na.rm=TRUE))
sapply(s,function(x) colMeans(x[,c('Ozone','Solar.R','Temp')],na.rm=TRUE))
library(swirl)
swirl()
head(flags,n=4)
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- apply(flags,class)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[,11:17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
unique_vals <- sapply(flags,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
dyn.load("/Users/gaojiaxing/Desktop/myfirst.so")
.C("hello",as.integer(3))
R
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,n=10)
tail(plants,n=15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace = TRUE)
flips=sample(c(0,1),100,replace = TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace = TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob =0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
my_pois<-replicate(100, rpois(5, 10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
library(swirl)
swirl()
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab = 'Speed')
plot(x=cars$speed,y=cars$dist,xlab = 'Speed',ylab = 'Stopping Distance')
plot(x=cars$speed,y=cars$dist,ylab = 'Stopping Distance')
plot(x=cars$speed,y=cars$dist,xlab = 'Speed',ylab = 'Stopping Distance')
plot(x=cars$speed,y=cars$dist,xlab = 'Speed',ylab = 'Stopping Distance'ï¼Œmain='My Plot')
plot(x=cars$speed,y=cars$dist,xlab = 'Speed',ylab = 'Stopping Distance',main='My Plot')
plot(cars,main='My Plot')
plot(cars,main='My Plot',main='My Plot Subtitle')
plot(cars,main='My Plot Subtitle')
plot(cars,sub='My Plot Subtitle')
?par
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(data=mtcars,formula=mpg~cyl)
boxplot(mtcars,formula=mpg~cyl)
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
getwd()
if(file.exists(data)=FALSE){
if(file.exists(data)==FALSE){
file.create("data")
}
str(file.create)
if(file.exists("data")==FALSE){
dir.create("data")
}
ls()
dir()
file_url = "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(file_url,destfile = "./data/camera.csv",method='curl')
list.files("./data")
dateDownlaoded<-date()
dateDownlaoded
camera <- read.table("./data/camera.csv",header=TRUE,seq=',')
camera <- read.table("./data/camera.csv",header=TRUE,seq=",")
camera <- read.table("./data/camera.csv",header=TRUE)
camera <- read.table("./data/camera.csv",header=TRUE)
camera <- read.table("./data/camera.csv",header=TRUE,seq=',')
camera <- read.table("./data/camera.csv",header=TRUE)
camera <- read.table("./data/camera.csv",header=TRUE)
library(readr)
camera <- read_csv("~/newbie_programming/R/data/camera.csv")
View(camera)
View(camera)
romove(camera)
delete(camera)
rm(camera)
camera <- read.csv(./data/camera.csv,header=TRUE)
camera <- read.csv(~/newbie_programming/R/data/camera.csv,header=TRUE)
camera <- read.csv("./data/camera.csv",header=TRUE)
rm(camera)
camera <- read.table("./data/camera.csv",header=TRUE,sep=',')
head(camera)
